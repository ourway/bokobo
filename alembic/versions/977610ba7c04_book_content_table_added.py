"""Book content table added

Revision ID: 977610ba7c04
Revises: 4e17ab85b61d
Create Date: 2019-11-10 15:22:29.090690

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '977610ba7c04'
down_revision = '4e17ab85b61d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('book_contents', sa.Column('book_press', postgresql.UUID(), nullable=False))
    op.create_unique_constraint(op.f('book_contents_id_key'), 'book_contents', ['book_id', 'type'])
    op.create_foreign_key(op.f('fk_tb_book_contents_col_book_press'), 'book_contents', 'persons', ['book_press'], ['id'])
    op.drop_constraint('constraints_id_key', 'constraints', type_='unique')
    op.create_unique_constraint(op.f('constraints_id_key'), 'constraints', ['id'])
    op.drop_constraint('group_permissions_id_key', 'group_permissions', type_='unique')
    op.create_unique_constraint(op.f('group_permissions_id_key'), 'group_permissions', ['id'])
    op.drop_constraint('permissions_id_key', 'permissions', type_='unique')
    op.create_unique_constraint(op.f('permissions_id_key'), 'permissions', ['id'])
    op.drop_constraint('persons_id_key', 'persons', type_='unique')
    op.create_unique_constraint(op.f('persons_id_key'), 'persons', ['email'])
    op.drop_constraint('unique_entity_connector_id_key', 'unique_entity_connector', type_='unique')
    op.create_unique_constraint(op.f('unique_entity_connector_id_key'), 'unique_entity_connector', ['UniqueCode', 'entity_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('unique_entity_connector_id_key'), 'unique_entity_connector', type_='unique')
    op.create_unique_constraint('unique_entity_connector_id_key', 'unique_entity_connector', ['id'])
    op.drop_constraint(op.f('persons_id_key'), 'persons', type_='unique')
    op.create_unique_constraint('persons_id_key', 'persons', ['id'])
    op.drop_constraint(op.f('permissions_id_key'), 'permissions', type_='unique')
    op.create_unique_constraint('permissions_id_key', 'permissions', ['permission'])
    op.drop_constraint(op.f('group_permissions_id_key'), 'group_permissions', type_='unique')
    op.create_unique_constraint('group_permissions_id_key', 'group_permissions', ['group_id', 'permission_id'])
    op.drop_constraint(op.f('constraints_id_key'), 'constraints', type_='unique')
    op.create_unique_constraint('constraints_id_key', 'constraints', ['UniqueCode'])
    op.drop_constraint(op.f('fk_tb_book_contents_col_book_press'), 'book_contents', type_='foreignkey')
    op.drop_constraint(op.f('book_contents_id_key'), 'book_contents', type_='unique')
    op.drop_column('book_contents', 'book_press')
    # ### end Alembic commands ###
